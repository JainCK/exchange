services:
  # Database Services
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: exchange_timescaledb
    environment:
      POSTGRES_DB: exchange_db
      POSTGRES_USER: exchange_user
      POSTGRES_PASSWORD: exchange_password
    ports:
      - "5432:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: exchange_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Enhanced Orderbook Server (Trading Engine)
  orderbook-server:
    build:
      context: ./orderbook-server
      dockerfile: Dockerfile
    container_name: exchange_orderbook
    ports:
      - "3000:3000"
      - "3001:3001" # WebSocket port
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://exchange_user:exchange_password@timescaledb:5432/exchange_db
    depends_on:
      - redis
      - timescaledb
    restart: unless-stopped
    volumes:
      - ./orderbook-server:/app
      - /app/node_modules

  # API Server (Authentication & User Management)
  api-server:
    build:
      context: ./api-server
      dockerfile: Dockerfile
    container_name: exchange_api
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - PORT=4000
      - DATABASE_URL=postgresql://exchange_user:exchange_password@timescaledb:5432/exchange_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=24h
      - JWT_REFRESH_EXPIRES_IN=7d
      - BCRYPT_SALT_ROUNDS=12
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - CORS_ORIGIN=http://localhost:3000
      - ORDERBOOK_SERVICE_URL=http://orderbook-server:3000
      - LOG_LEVEL=info
    depends_on:
      - redis
      - timescaledb
      - orderbook-server
    restart: unless-stopped
    volumes:
      - ./api-server:/app
      - /app/node_modules

volumes:
  timescale_data:
  redis_data:

networks:
  default:
    name: exchange_network
